//https://leetcode.com/explore/learn/card/linked-list/214/two-pointer-technique/1214
/**
 * Definition for singly-linked list.
 * function ListNode(val) {
 *     this.val = val;
 *     this.next = null;
 * }
 */

/**
 * @param {ListNode} head
 * @return {ListNode}
 */
var detectCycle = function(head) {
    let isCycle = false, slow = fast = head;
  while(fast != null && fast.next != null){
    slow = slow.next;
    fast = fast.next.next;
    if(slow === fast){
      isCycle = true;
      break;
    }
  }
  if(isCycle){
    let slow2 = head;
    while(slow2 != slow){
      slow = slow.next;
      slow2 = slow2.next;
    }
    return slow;
  }
  return null;
};
